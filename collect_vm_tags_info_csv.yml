---
  - name: Collect VCenter VM Info in CSV format
    hosts: localhost
    connection: local
    gather_facts: false
    become: false
    vars:
      report_path: "/home/palani/ansible/VC_NSXT_Tags/reports"
      report_file: vc_vminfo_reports_{{ datetime }}.csv
    vars_prompt:
      - name: vcenter_srvr
        prompt: "Enter the VCenter IP Details.."
        private: false
      
      - name: vcenter_user
        prompt: "Enter the VCenter USER Details.."
        private: false

      - name: vcenter_pswd
        prompt: "Enter the VCenter PASSWORD Details.."
        private: true
        unsafe: true

    tasks:
      - name: Collecting all virtual machines information
        community.vmware.vmware_vm_info:
          hostname: '{{ vcenter_srvr }}'
          username: '{{ vcenter_user }}'
          password: '{{ vcenter_pswd }}'
          #vm_name: CCA_Linux_Test_03
          validate_certs: false
          show_tag: true
          show_attribute: true
          folder: "/nl0x-tm1-dc01-mgmt/vm/Workload_Domain/DTAP_Test-VMs"
        delegate_to: localhost
        register: vc_vminfo
      
      - name: Filtering the required details and set variables
        ansible.builtin.set_fact: 
          vc_vm_tags:  "{{ vc_vm_tags |default([]) + [ { 'guest_name': item.guest_name, 'instance_uuid': item.instance_uuid, 'pcs_environment': item.attributes.pcs_environment | default(), 'pcs_oarid': item.attributes.pcs_oarid | default() }] }}"
        with_items:
          - "{{ vc_vminfo.virtual_machines }}"
      
      - name: Generating Date and Time to add in report File 
        ansible.builtin.set_fact: 
          datetime="{{lookup('pipe','date +%Y%m%d_%H%M%Z')}}"
        run_once: true

      - name: Create CSV file and set the Header
        ansible.builtin.lineinfile:
          dest: "{{ report_path  }}/{{ report_file }}"
          line: "GuestName,Guest_UUID,PCS_Environment,PCS_OARID"
          create: yes
          state: present
      
      - name: Collect the vm information in CSV File
        ansible.builtin.lineinfile:
          path: "{{ report_path  }}/{{ report_file }}"
          insertafter: EOF
          line: '"{{ item.guest_name }}","{{ item.instance_uuid }}","{{ item.pcs_environment | default() }}","{{ item.pcs_oarid | default() }}"'
        with_items:
          - "{{ vc_vm_tags }}"

      - name: Adding data in CSV file
        ansible.builtin.lineinfile:
          dest: "{{ report_path }}/{{ report_file }}"
          state: absent
          regex: '^\s*$'
